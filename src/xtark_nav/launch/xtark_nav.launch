<?xml version="1.0"?>
<launch>
    <arg name="use_realsense" default="false"/>
    <arg name="use_gemini" default="true"/>
    <arg name="use_ekf" default="true"/>
    <param name="use_sim_time" value="false"/>

  <!-- 启动底盘驱动包 -->
  <include file="$(find xtark_driver)/launch/xtark_bringup.launch">
    <arg name="use_ekf" value="$(arg use_ekf)"/>
    </include>

    <!-- 启动激光雷达驱动包 -->    
    <include file="$(find xtlidar_driver)/launch/XTLIDAR_C25.launch"/>
    
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="log" name="laser_filter">
          <rosparam command="load" file="$(find xtark_nav)/configuration_files/xtark_laserfilter.yaml"/>
          <remap from="/scan" to="/scan"/>
          <remap from="/scan_filtered" to="/scan_filtered"/>
     </node>

    <!-- 启动USB摄像头驱动包 -->
    <group if="$(arg use_realsense)">
        <include file="$(find realsense2_camera)/launch/rs_camera.launch">
		    <arg name="enable_pointcloud"   value="true"/>
            <arg name="json_file_path"      value="$(find xtark_nav)/configuration_files/realsense_highaccuracy.json"/>
		    <arg name="filters"             value="disparity,decimation"/>
	    </include>

        <!-- 启动Web video server功能包，发布摄像头数据 -->
        <!-- <node name="web_video_server" pkg="web_video_server" type="web_video_server" output="log">
            <param name="port" type="int" value="8080" />
        </node> -->
    </group>
    <group if="$(arg use_gemini)">
        <include file="$(find astra_camera)/launch/stereo_s_u3.launch">
	    </include>

        <!-- 启动Web video server功能包，发布摄像头数据 -->
        <!-- <node name="web_video_server" pkg="web_video_server" type="web_video_server" output="log">
            <param name="port" type="int" value="8080" />
        </node> -->
    </group>



    <!-- 启动Map server功能包，发布地图 -->
    <arg name="map_file" default="/home/xtark/znm_25.yaml"/>
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <arg name="initial_pose_x" default="0.0"/>
	<arg name="initial_pose_y" default="0.0"/>
	<arg name="initial_pose_a" default="0.0"/>

    <!-- 启动AMCL 自适应蒙特卡洛定位算法包 -->
    <include file="$(find xtark_nav)/launch/include/amcl.launch">
        <arg name="scan_topic" value="/scan_filtered"/>
        <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
        <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
        <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    </include>

    <!-- 启动move_base节点算法包 -->
    <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen" clear_params="true">
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/base_global_planner_param.yaml" command="load" />
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/base_local_planner_params.yaml" command="load" />
        <rosparam file="$(find xtark_nav)/configuration_files/navigation_params/move_base_params.yaml" command="load" />
        <remap from="/scan" to="/scan_filtered"/>
      </node>

 <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>
 <!-- 启动途径点导航包 -->    
 <!-- <include file="$(find follow_waypoints)/launch/follow_waypoints.launch"/> -->
  <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher"/>
  <arg name="debug" default="false"/>
  <node name="xtark_showMark" pkg="xtark_nav" type="xtark_show_mark.py" output="screen"/>
  <node name="xtark_multiGoal" pkg="xtark_nav" type="xtark_multiGoalListen.py" output="screen"/>
  <node name="xtark_cancelGoal" pkg="xtark_nav" type="xtark_cancelGoalListen.py" output="screen"/>


</launch>
